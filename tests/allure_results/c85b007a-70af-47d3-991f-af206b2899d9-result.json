{"name": "test_submit_form", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 5.0s, while waiting for:\nbrowser.element(('css selector', '.modal-content')).all(('css selector', 'tbody tr')).element_by(has text Hobbies).all(('css selector', 'td'))[1].has exact text Sports, Reading\n\nReason: AssertionError: actual text: \nScreenshot: file://C:\\Users\\Bitty\\.selene\\screenshots\\1664623891689\\1664623891690.png\nPageSource: file://C:\\Users\\Bitty\\.selene\\screenshots\\1664623891689\\1664623891690.html", "trace": "fn = <selene.core.conditions.ElementCondition object at 0x000001FCE8228250>\n\n    @self._decorator(self)\n    def _(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\nvenv\\lib\\site-packages\\selene\\core\\wait.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selene.core.conditions.ElementCondition object at 0x000001FCE8228250>, entity = <selene.core.entity.Element object at 0x000001FCE822B580>\n\n    def __call__(self, entity: E) -> None:\n>       return self._fn(entity)\n\nvenv\\lib\\site-packages\\selene\\core\\condition.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nentity = <selene.core.entity.Element object at 0x000001FCE822B580>\n\n    def fn(entity: E) -> None:\n        query_to_str = str(query)\n        result = (\n            query.__name__\n            if query_to_str.startswith('<function')\n            else query_to_str\n        )\n        actual = query(entity)\n        if not predicate(actual):\n>           raise AssertionError(f'actual {result}: {actual}')\nE           AssertionError: actual text:\n\nvenv\\lib\\site-packages\\selene\\core\\condition.py:147: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n    @allure.tag(\"web\")\n    @allure.severity(Severity.MINOR)\n    @allure.label(\"owner\", \"Murat\")\n    @allure.feature(\"Задачи в DemoQA\")\n    @allure.story(\"Пользователь может отправить валидно заполненную форму\")\n    @allure.link(\"https://demoqa.com/automation-practice-form\", name=\"Demo QA\")\n    def test_submit_form():\n        with allure.step(\"Открываем главную страницу\"):\n            registration_form.given_opened()\n        with allure.step('В поле First Name вводим значение \"user.first_name\"'):\n            registration_form.set_firstname(murat.first_name)\n        with allure.step('В поле Last Name вводим значение \"user.last_name\"'):\n            registration_form.set_lastname(murat.last_name)\n        with allure.step('В поле Email вводим значение \"user.email\"'):\n            registration_form.set_email(murat.email)\n        with allure.step('В поле Gender выбираем значение \"user.gender.value\"'):\n            registration_form.set_gender(murat.gender.value)\n        with allure.step('В поле Mobile вводим значение \"user.phone_number\"'):\n            registration_form.set_phone(murat.phone_number)\n        with allure.step('В поле Date of Birth вводим значения \"user.birth_day, user.birth_month, user.birth_year\"'):\n            registration_form.set_date_of_birth(murat.birth_day, murat.birth_month, murat.birth_year)\n        with allure.step('В поле Subjects вводим значения \"user.subjects\"'):\n            registration_form.set_subjects(murat.subjects)\n        with allure.step('В поле Hobbies выбираем значения \"user.subjects\"'):\n            registration_form.set_hobbies(murat.hobbies)\n        with allure.step('В поле Picture загружаем файл \"user.picture_file\"'):\n            registration_form.select_picture(murat.picture_file)\n        with allure.step('В поле Current Address выбираем значения \"user.current_address\"'):\n            registration_form.set_adress(murat.current_address)\n            registration_form.scroll_to_bottom()\n        with allure.step('В поле Select state выбираем значения \"user.state\"'):\n            registration_form.set_state(murat.state)\n        with allure.step('В поле Select city выбираем значения \"user.state\"'):\n            registration_form.set_city(murat.city)\n        with allure.step(\"Отправляем форму\"):\n            registration_form.submit()\n        with allure.step(\"Проверяем что появился попап\"):\n            registration_popup.should_visible()\n        with allure.step(\"Проверяем данные в попапе\"):\n>           registration_popup.should_have_submitted(\n                [\n                    ('Student Name', f'{murat.first_name} {murat.last_name}'),\n                    ('Student Email', murat.email),\n                    ('Gender', murat.gender.value),\n                    ('Mobile', '8977777777'),\n                    ('Date of Birth', f'{murat.birth_day} {murat.birth_month},{murat.birth_year}'),\n                    ('Subjects', turpl_to_string.convert(murat.subjects)),\n                    ('Hobbies', turpl_to_string.convert(murat.hobbies)),\n                    ('Picture', murat.picture_file),\n                    ('Address', murat.current_address),\n                    ('State and City', f'{murat.state} {murat.city}')\n                ],\n            )\n\ntests\\test_student_registration_form.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ndemoqa_tests\\model\\assertions\\registration_popup.py:14: in should_have_submitted\n    rows.element_by(have.text(row)).all('td')[1].should(have.exact_text(value))\nvenv\\lib\\site-packages\\selene\\core\\entity.py:529: in should\n    super().should(condition)\nvenv\\lib\\site-packages\\selene\\core\\entity.py:125: in should\n    self.wait.for_(condition)\nvenv\\lib\\site-packages\\selene\\core\\wait.py:147: in for_\n    return _(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.conditions.ElementCondition object at 0x000001FCE8228250>\n\n    @self._decorator(self)\n    def _(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n    \n                    reason_message = str(reason)\n    \n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=reason_message,\n                    )\n                    # todo: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 5.0s, while waiting for:\nE                   browser.element(('css selector', '.modal-content')).all(('css selector', 'tbody tr')).element_by(has text Hobbies).all(('css selector', 'td'))[1].has exact text Sports, Reading\nE                   \nE                   Reason: AssertionError: actual text: \nE                   Screenshot: file://C:\\Users\\Bitty\\.selene\\screenshots\\1664623891689\\1664623891690.png\nE                   PageSource: file://C:\\Users\\Bitty\\.selene\\screenshots\\1664623891689\\1664623891690.html\n\nvenv\\lib\\site-packages\\selene\\core\\wait.py:145: TimeoutException"}, "steps": [{"name": "Открываем главную страницу", "status": "passed", "start": 1664623891783, "stop": 1664623901154}, {"name": "В поле First Name вводим значение \"user.first_name\"", "status": "passed", "start": 1664623901154, "stop": 1664623901243}, {"name": "В поле Last Name вводим значение \"user.last_name\"", "status": "passed", "start": 1664623901243, "stop": 1664623901467}, {"name": "В поле Email вводим значение \"user.email\"", "status": "passed", "start": 1664623901467, "stop": 1664623901587}, {"name": "В поле Gender выбираем значение \"user.gender.value\"", "status": "passed", "start": 1664623901587, "stop": 1664623901771}, {"name": "В поле Mobile вводим значение \"user.phone_number\"", "status": "passed", "start": 1664623901771, "stop": 1664623901931}, {"name": "В поле Date of Birth вводим значения \"user.birth_day, user.birth_month, user.birth_year\"", "status": "passed", "start": 1664623901931, "stop": 1664623902389}, {"name": "В поле Subjects вводим значения \"user.subjects\"", "status": "passed", "start": 1664623902389, "stop": 1664623902704}, {"name": "В поле Hobbies выбираем значения \"user.subjects\"", "status": "passed", "start": 1664623902704, "stop": 1664623902712}, {"name": "В поле Picture загружаем файл \"user.picture_file\"", "status": "passed", "start": 1664623902712, "stop": 1664623902768}, {"name": "В поле Current Address выбираем значения \"user.current_address\"", "status": "passed", "start": 1664623902768, "stop": 1664623902884}, {"name": "В поле Select state выбираем значения \"user.state\"", "status": "passed", "start": 1664623902884, "stop": 1664623903172}, {"name": "В поле Select city выбираем значения \"user.state\"", "status": "passed", "start": 1664623903172, "stop": 1664623903420}, {"name": "Отправляем форму", "status": "passed", "start": 1664623903420, "stop": 1664623903476}, {"name": "Проверяем что появился попап", "status": "passed", "start": 1664623903476, "stop": 1664623903496}, {"name": "Проверяем данные в попапе", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 5.0s, while waiting for:\nbrowser.element(('css selector', '.modal-content')).all(('css selector', 'tbody tr')).element_by(has text Hobbies).all(('css selector', 'td'))[1].has exact text Sports, Reading\n\nReason: AssertionError: actual text: \nScreenshot: file://C:\\Users\\Bitty\\.selene\\screenshots\\1664623891689\\1664623891690.png\nPageSource: file://C:\\Users\\Bitty\\.selene\\screenshots\\1664623891689\\1664623891690.html\n\n", "trace": "  File \"C:\\Users\\Bitty\\Desktop\\projects\\qa_guru_python_2_2\\tests\\test_student_registration_form.py\", line 48, in test_submit_form\n    registration_popup.should_have_submitted(\n  File \"C:\\Users\\Bitty\\Desktop\\projects\\qa_guru_python_2_2\\demoqa_tests\\model\\assertions\\registration_popup.py\", line 14, in should_have_submitted\n    rows.element_by(have.text(row)).all('td')[1].should(have.exact_text(value))\n  File \"C:\\Users\\Bitty\\Desktop\\projects\\qa_guru_python_2_2\\venv\\lib\\site-packages\\selene\\core\\entity.py\", line 529, in should\n    super().should(condition)\n  File \"C:\\Users\\Bitty\\Desktop\\projects\\qa_guru_python_2_2\\venv\\lib\\site-packages\\selene\\core\\entity.py\", line 125, in should\n    self.wait.for_(condition)\n  File \"C:\\Users\\Bitty\\Desktop\\projects\\qa_guru_python_2_2\\venv\\lib\\site-packages\\selene\\core\\wait.py\", line 147, in for_\n    return _(fn)\n  File \"C:\\Users\\Bitty\\Desktop\\projects\\qa_guru_python_2_2\\venv\\lib\\site-packages\\selene\\core\\wait.py\", line 145, in _\n    raise self._hook_failure(failure)\n"}, "start": 1664623903496, "stop": 1664623909472}], "start": 1664623891783, "stop": 1664623909472, "uuid": "16ca5403-c22a-4224-a188-d8a3703e2a2a", "historyId": "f3d3b39f9fe91022c5ec0c5f47e58a76", "testCaseId": "9f936fad91039bef8567e0f0c6488053", "fullName": "tests.test_student_registration_form#test_submit_form", "labels": [{"name": "severity", "value": "minor"}, {"name": "story", "value": "Пользователь может отправить валидно заполненную форму"}, {"name": "feature", "value": "Задачи в DemoQA"}, {"name": "owner", "value": "Murat"}, {"name": "tag", "value": "web"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_student_registration_form"}, {"name": "host", "value": "HOME-PC"}, {"name": "thread", "value": "9100-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_student_registration_form"}], "links": [{"type": "link", "url": "https://demoqa.com/automation-practice-form", "name": "Demo QA"}]}